From d1354d8b01b65504714c32a6eb22f636b41fb599 Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Wed, 3 Jun 2015 16:51:42 +0100
Subject: [PATCH] Warn the user if they are installing an addon that may harm
 their installation

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 xbmc/addons/AddonInstaller.cpp | 13 +++++++++++++
 xbmc/addons/AddonInstaller.h   |  1 +
 2 files changed, 14 insertions(+)

diff --git a/xbmc/addons/AddonInstaller.cpp b/xbmc/addons/AddonInstaller.cpp
index 0a99d59..b65b7fe 100644
--- a/xbmc/addons/AddonInstaller.cpp
+++ b/xbmc/addons/AddonInstaller.cpp
@@ -213,8 +213,21 @@ bool CAddonInstaller::Install(const std::string &addonID, bool force /* = false
   return DoInstall(addon, hash, addonInstalled, referer, background, modal);
 }
 
+bool CAddonInstaller::IsBadAddon(std::string addonName)
+{
+  if (addonName == "repository.xunitytalk" || addonName == "script.allinone" || addonName == "plugin.video.xunity" || addonName == "plugin.video.1channel")
+  {
+      return ! CGUIDialogYesNo::ShowAndGetInput(addonName, "This addon may harm your OSMC installation", "We recommend that you do not install it and cannot provide support for it.", "Would you like to continue with installation?", "Cancel Install", "I accept the risk");
+  }
+  return false;
+}
+
 bool CAddonInstaller::DoInstall(const AddonPtr &addon, const std::string &hash /* = "" */, bool update /* = false */, const std::string &referer /* = "" */, bool background /* = true */, bool modal /* = false */)
 {
+  // check whether the addon is dodgy if we're not updating it
+  if (IsBadAddon(addon->ID()) && ! update)
+       return false;
+
   // check whether we already have the addon installing
   CSingleLock lock(m_critSection);
   if (m_downloadJobs.find(addon->ID()) != m_downloadJobs.end())
diff --git a/xbmc/addons/AddonInstaller.h b/xbmc/addons/AddonInstaller.h
index 82b8ea0..252e934 100644
--- a/xbmc/addons/AddonInstaller.h
+++ b/xbmc/addons/AddonInstaller.h
@@ -143,6 +143,7 @@ private:
    \return true if dependencies are available, false otherwise.
    */
   bool CheckDependencies(const ADDON::AddonPtr &addon, std::vector<std::string>& preDeps, CAddonDatabase &database);
+  bool IsBadAddon(std::string addonName);
 
   void PrunePackageCache();
   int64_t EnumeratePackageFolder(std::map<std::string,CFileItemList*>& result);
-- 
2.1.0

