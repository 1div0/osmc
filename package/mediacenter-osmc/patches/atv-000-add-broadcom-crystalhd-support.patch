From 3610f520b785a91cad6c634cdd068412ed887b8a Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Tue, 2 Jun 2015 22:17:48 +0100
Subject: [PATCH] Add CrystalHD video acceleration

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 configure.ac                                       | 52 ++++++++++++++++++++++
 system/settings/settings.xml                       |  9 ++++
 xbmc/Application.cpp                               | 11 +++++
 xbmc/cores/dvdplayer/DVDCodecs/DVDFactoryCodec.cpp | 32 +++++++++++++
 xbmc/cores/dvdplayer/DVDCodecs/Video/Makefile.in   |  4 ++
 xbmc/settings/SettingConditions.cpp                |  8 ++++
 xbmc/system.h                                      |  1 +
 7 files changed, 117 insertions(+)

diff --git a/configure.ac b/configure.ac
index a378a7d..69728de 100644
--- a/configure.ac
+++ b/configure.ac
@@ -202,6 +202,8 @@ vdpau_not_found="== Could not find libvdpau. VDPAU support disabled. =="
 vdpau_disabled="== VDPAU support manually disabled. =="
 vaapi_not_found="== Could not find libva. VAAPI support disabled. =="
 vaapi_disabled="== VAAPI support manually disabled. =="
+crystalhd_not_found="== Could not find libcrystalhd. CrystalHD support disabled. =="
+crystalhd_disabled="== CrystalHD support manually disabled. =="
 vtbdecoder_enabled="== VTBDecoder support enabled. =="
 vtbdecoder_disabled="== VTBDecoder support manually disabled. =="
 openmax_disabled="== OpenMax support manually disabled. =="
@@ -288,6 +290,12 @@ AC_ARG_ENABLE([vaapi],
   [use_vaapi=$enableval],
   [use_vaapi=auto])
 
+AC_ARG_ENABLE([crystalhd],
+  [AS_HELP_STRING([--enable-crystalhd],
+  [enable CrystalHD decoding (default is auto)])],
+  [use_crystalhd=$enableval],
+  [use_crystalhd=auto])
+
 AC_ARG_ENABLE([vtbdecoder],
   [AS_HELP_STRING([--enable-vtbdecoder],
   [enable VTBDecoder decoding (default is auto)])],
@@ -653,6 +661,7 @@ case $host in
      use_joystick=no
      use_neon=yes
      use_libcec=no
+     use_crystalhd=no
      use_vtbdecoder=yes
      use_optical_drive=no
      use_dvdcss=no
@@ -678,6 +687,7 @@ case $host in
   powerpc-apple-darwin*)
      use_joystick=no
      use_vtbdecoder=no
+     use_crystalhd=no
      ARCH="powerpc-osx"
      use_arch="ppc"
      DEPENDS_ROOT_FOR_XCODE=$(echo ${prefix%/*})
@@ -1915,6 +1925,41 @@ else
   USE_VAAPI=0
 fi
 
+# CrystalHD
+if test "x$use_crystalhd" != "xno"; then
+  SAVE_CFLAGS="$CFLAGS"
+  CFLAGS="-D__LINUX_USER__"
+  AC_CHECK_HEADER([libcrystalhd/libcrystalhd_if.h], [],
+    [ if test "x$use_crystalhd" = "xyes"; then
+        AC_MSG_ERROR($crystalhd_not_found)
+      else
+        use_crystalhd=no
+        AC_MSG_RESULT($crystalhd_not_found)
+      fi
+      USE_CRYSTALHD=0
+    ])
+    CFLAGS="$SAVE_CFLAGS"
+    if test "$host_vendor" != "apple"; then
+      XB_FIND_SONAME([CRYSTALHD], [crystalhd], [use_crystalhd])
+    fi
+    if test "x$use_crystalhd" != "xno"; then
+      SAVE_CFLAGS="$CFLAGS"
+      CFLAGS="-D__LINUX_USER__ -lcrystalhd"
+      # check for new crystalhd lib
+      AC_COMPILE_IFELSE(
+        [AC_LANG_SOURCE([#include <libcrystalhd/bc_dts_types.h>
+          #include <libcrystalhd/bc_dts_defs.h>
+          PBC_INFO_CRYSTAL bCrystalInfo;])],
+        [ AC_DEFINE([HAVE_LIBCRYSTALHD], [2], [Define to 2 if you have the 'New Broadcom Crystal HD' library.]) ], 
+        [ AC_DEFINE([HAVE_LIBCRYSTALHD], [1], [Define to 1 if you have the 'Old Broadcom Crystal HD' library.]) ])
+      CFLAGS="$SAVE_CFLAGS"
+      USE_CRYSTALHD=1
+    fi
+else
+  AC_MSG_NOTICE($crystalhd_disabled)
+  USE_CRYSTALHD=0
+fi
+
 # VTBDecoder
 if test "x$use_vtbdecoder" != "xno"; then
   if test "$host_vendor" = "apple" ; then
@@ -2115,6 +2160,12 @@ else
   final_message="$final_message\n  VAAPI:\tNo"
 fi
 
+if test "x$use_crystalhd" != "xno"; then
+  final_message="$final_message\n  CrystalHD:\tYes"
+else
+  final_message="$final_message\n  CrystalHD:\tNo"
+fi
+
 if test "x$use_vtbdecoder" != "xno"; then
   final_message="$final_message\n  VTBDecoder:\tYes"
 else
@@ -2659,6 +2710,7 @@ AC_SUBST(USE_OPENGL)
 AC_SUBST(USE_OPENGLES)
 AC_SUBST(USE_VDPAU)
 AC_SUBST(USE_VAAPI)
+AC_SUBST(USE_CRYSTALHD)
 AC_SUBST(USE_LIBSMBCLIENT)
 AC_SUBST(USE_LIBNFS)
 AC_SUBST(USE_AIRPLAY)
diff --git a/system/settings/settings.xml b/system/settings/settings.xml
index 40ec104..8b7891f 100644
--- a/system/settings/settings.xml
+++ b/system/settings/settings.xml
@@ -811,6 +811,15 @@
           <default>true</default>
           <control type="toggle" />
         </setting>
+        <setting id="videoplayer.usechd" type="boolean" label="13428" help="36159">
+          <requirement>HasCrystalHDDevice</requirement>
+          <dependencies>
+            <dependency type="enable" setting="videoplayer.decodingmethod" operator="is">1</dependency>
+          </dependencies>
+          <level>2</level>
+          <default>true</default>
+          <control type="toggle" />
+        </setting>
         <setting id="videoplayer.useomx" type="boolean" label="13430" help="36161">
           <requirement>HAVE_LIBOPENMAX</requirement>
           <level>2</level>
diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 8ff38d0..d0c9647 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -130,6 +130,9 @@
 #ifdef HAS_JSONRPC
 #include "interfaces/json-rpc/JSONRPC.h"
 #endif
+#if defined(HAVE_LIBCRYSTALHD)
+#include "cores/dvdplayer/DVDCodecs/Video/CrystalHD.h"
+#endif
 #include "interfaces/AnnouncementManager.h"
 #include "peripherals/Peripherals.h"
 #include "peripherals/dialogs/GUIDialogPeripheralManager.h"
@@ -1224,6 +1227,10 @@ bool CApplication::Initialize()
 
   m_slowTimer.StartZero();
 
+#if defined(HAVE_LIBCRYSTALHD)
+  CCrystalHD::GetInstance();
+#endif
+
   CAddonMgr::Get().StartServices(true);
 
   // register action listeners
@@ -2676,6 +2683,10 @@ void CApplication::Stop(int exitCode)
       XBMCHelper::GetInstance().Stop();
 #endif
 
+#if defined(HAVE_LIBCRYSTALHD)
+    CCrystalHD::RemoveInstance();
+#endif
+
     g_mediaManager.Stop();
 
     // Stop services before unloading Python
diff --git a/xbmc/cores/dvdplayer/DVDCodecs/DVDFactoryCodec.cpp b/xbmc/cores/dvdplayer/DVDCodecs/DVDFactoryCodec.cpp
index b90237b..4142c9c 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/DVDFactoryCodec.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/DVDFactoryCodec.cpp
@@ -42,6 +42,9 @@
 #endif
 #include "Video/MMALCodec.h"
 #include "Video/DVDVideoCodecStageFright.h"
+#if defined(HAVE_LIBCRYSTALHD)
+#include "Video/DVDVideoCodecCrystalHD.h"
+#endif
 #if defined(HAS_LIBAMCODEC)
 #include "utils/AMLUtils.h"
 #include "Video/DVDVideoCodecAmlogic.h"
@@ -157,6 +160,11 @@ CDVDVideoCodec* CDVDFactoryCodec::CreateVideoCodec(CDVDStreamInfo &hint, const C
 #elif defined(TARGET_DARWIN)
   hwSupport += "VideoToolBoxDecoder:no ";
 #endif
+#ifdef HAVE_LIBCRYSTALHD
+  hwSupport += "CrystalHD:yes ";
+#else
+  hwSupport += "CrystalHD:no ";
+#endif
 #if defined(HAS_LIBAMCODEC)
   hwSupport += "AMCodec:yes ";
 #else
@@ -269,6 +277,30 @@ CDVDVideoCodec* CDVDFactoryCodec::CreateVideoCodec(CDVDStreamInfo &hint, const C
   }
 #endif
 
+#if defined(HAVE_LIBCRYSTALHD)
+  if (!hint.software && CSettings::Get().GetBool("videoplayer.usechd"))
+  {
+    if (CCrystalHD::GetInstance()->DevicePresent())
+    {
+      switch(hint.codec)
+      {
+        case AV_CODEC_ID_VC1:
+        case AV_CODEC_ID_WMV3:
+        case AV_CODEC_ID_H264:
+        case AV_CODEC_ID_MPEG2VIDEO:
+          if (hint.codec == AV_CODEC_ID_H264 && hint.ptsinvalid)
+            break;
+          if (hint.codec == AV_CODEC_ID_MPEG2VIDEO && hint.width <= 720)
+            break;
+          if ( (pCodec = OpenCodec(new CDVDVideoCodecCrystalHD(), hint, options)) ) return pCodec;
+        break;
+        default:
+        break;
+      }
+    }
+  }
+#endif
+
 #if defined(TARGET_ANDROID)
   if (!hint.software && CSettings::Get().GetBool("videoplayer.usemediacodec"))
   {
diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/Makefile.in b/xbmc/cores/dvdplayer/DVDCodecs/Video/Makefile.in
index 56ec6a3..5592bfe 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/Makefile.in
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/Makefile.in
@@ -11,6 +11,10 @@ endif
 ifeq (@USE_VAAPI@,1)
 SRCS += VAAPI.cpp
 endif
+ifeq (@USE_CRYSTALHD@,1)
+SRCS += CrystalHD.cpp
+SRCS += DVDVideoCodecCrystalHD.cpp
+endif
 ifeq ($(findstring osx,@ARCH@),osx)
 SRCS += DVDVideoCodecVDA.cpp
 SRCS += VDA.cpp
diff --git a/xbmc/settings/SettingConditions.cpp b/xbmc/settings/SettingConditions.cpp
index c313bd0..95089ce 100644
--- a/xbmc/settings/SettingConditions.cpp
+++ b/xbmc/settings/SettingConditions.cpp
@@ -29,6 +29,9 @@
 #include "android/activity/AndroidFeatures.h"
 #endif // defined(TARGET_ANDROID)
 #include "cores/AudioEngine/AEFactory.h"
+#if defined(HAVE_LIBCRYSTALHD)
+#include "cores/dvdplayer/DVDCodecs/Video/CrystalHD.h"
+#endif // defined(HAVE_LIBCRYSTALHD)
 #include "cores/dvdplayer/DVDCodecs/Video/DVDVideoCodec.h"
 #include "guilib/LocalizeStrings.h"
 #include "peripherals/Peripherals.h"
@@ -224,6 +227,11 @@ void CSettingConditions::Initialize()
 #ifdef HAS_ZEROCONF
   m_simpleConditions.insert("has_zeroconf");
 #endif
+#ifdef HAVE_LIBCRYSTALHD
+  m_simpleConditions.insert("have_libcrystalhd");
+  if (CCrystalHD::GetInstance()->DevicePresent())
+    m_simpleConditions.insert("hascrystalhddevice");
+#endif
 #ifdef HAVE_LIBOPENMAX
   m_simpleConditions.insert("have_libopenmax");
 #endif
diff --git a/xbmc/system.h b/xbmc/system.h
index 2213421..cfe988b 100644
--- a/xbmc/system.h
+++ b/xbmc/system.h
@@ -106,6 +106,7 @@
 #define HAS_WIN32_NETWORK
 #define HAS_IRSERVERSUITE
 #define HAS_AUDIO
+#define HAVE_LIBCRYSTALHD 2
 #define HAS_WEB_SERVER
 #define HAS_WEB_INTERFACE
 #define HAVE_LIBSSH
-- 
2.1.0

