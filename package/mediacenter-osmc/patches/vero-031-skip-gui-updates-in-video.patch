From 1a34a3c3bd1255fb96f42148c386bf0ccc0faa70 Mon Sep 17 00:00:00 2001
From: popcornmix <popcornmix@gmail.com>
Date: Sat, 24 Jan 2015 17:33:30 +0000
Subject: [PATCH] renderer: Allow gui updates to be skipped when playing video

---
 xbmc/Application.cpp             | 43 ++++++++++++++++++++++++++--------------
 xbmc/guilib/GUIWindowManager.cpp |  2 --
 xbmc/guilib/GUIWindowManager.h   |  3 ++-
 3 files changed, 30 insertions(+), 18 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index eef7f02..e792b72 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -2279,27 +2279,41 @@ void CApplication::Render()
   if(!g_Windowing.BeginRender())
     return;
 
-  CDirtyRegionList dirtyRegions = g_windowManager.GetDirty();
-  if(g_graphicsContext.GetStereoMode())
+  CDirtyRegionList dirtyRegions;
+
+  // render gui layer
+  int fps = 0;
+  if (g_graphicsContext.IsFullScreenVideo() && !m_pPlayer->IsPausedPlayback())
+    fps = CSettings::Get().GetInt("videoplayer.limitguiupdate");
+  unsigned int now = XbmcThreads::SystemClockMillis();
+  unsigned int frameTime = now - m_lastRenderTime;
+  if (fps <= 0 || frameTime * fps >= 1000)
   {
-    g_graphicsContext.SetStereoView(RENDER_STEREO_VIEW_LEFT);
-    if(RenderNoPresent())
-      hasRendered = true;
+    dirtyRegions = g_windowManager.GetDirty();
+    if (g_graphicsContext.GetStereoMode())
+    {
+      g_graphicsContext.SetStereoView(RENDER_STEREO_VIEW_LEFT);
+      if (RenderNoPresent())
+        hasRendered = true;
 
-    if(g_graphicsContext.GetStereoMode() != RENDER_STEREO_MODE_MONO)
+      if (g_graphicsContext.GetStereoMode() != RENDER_STEREO_MODE_MONO)
+      {
+        g_graphicsContext.SetStereoView(RENDER_STEREO_VIEW_RIGHT);
+        if (RenderNoPresent())
+          hasRendered = true;
+      }
+      g_graphicsContext.SetStereoView(RENDER_STEREO_VIEW_OFF);
+    }
+    else
     {
-      g_graphicsContext.SetStereoView(RENDER_STEREO_VIEW_RIGHT);
-      if(RenderNoPresent())
+      if (RenderNoPresent())
         hasRendered = true;
     }
-    g_graphicsContext.SetStereoView(RENDER_STEREO_VIEW_OFF);
-  }
-  else
-  {
-    if(RenderNoPresent())
-      hasRendered = true;
   }
 
+  // render video layer
+  g_windowManager.RenderEx();
+
   g_Windowing.EndRender();
 
   // execute post rendering actions (finalize window closing)
@@ -2311,7 +2325,6 @@ void CApplication::Render()
   g_infoManager.ResetCache();
   lock.Leave();
 
-  unsigned int now = XbmcThreads::SystemClockMillis();
   if (hasRendered)
     m_lastRenderTime = now;
 
diff --git a/xbmc/guilib/GUIWindowManager.cpp b/xbmc/guilib/GUIWindowManager.cpp
index ef97251..a006936 100644
--- a/xbmc/guilib/GUIWindowManager.cpp
+++ b/xbmc/guilib/GUIWindowManager.cpp
@@ -611,8 +611,6 @@ bool CGUIWindowManager::Render()
       CGUITexture::DrawQuad(*i, 0x4c00ff00);
   }
 
-  RenderEx();
-
   return hasRendered;
 }
 
diff --git a/xbmc/guilib/GUIWindowManager.h b/xbmc/guilib/GUIWindowManager.h
index ea7239a..b577f80 100644
--- a/xbmc/guilib/GUIWindowManager.h
+++ b/xbmc/guilib/GUIWindowManager.h
@@ -93,6 +93,8 @@ class CGUIWindowManager
    */
   bool Render();
 
+  void RenderEx() const;
+
   /*! \brief Do any post render activities.
    */
   void AfterRender();
@@ -144,7 +146,6 @@ class CGUIWindowManager
 #endif
 private:
   void RenderPass() const;
-  void RenderEx() const;
 
   void LoadNotOnDemandWindows();
   void UnloadNotOnDemandWindows();
