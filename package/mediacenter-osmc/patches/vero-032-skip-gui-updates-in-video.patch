From 1a23f57441dd7ab0a52866f646938db267698745 Mon Sep 17 00:00:00 2001
From: Rainer Hochecker <fernetmenta@online.de>
Date: Fri, 13 Mar 2015 20:48:37 +0100
Subject: [PATCH] renderer: Allow gui updates to be skipped when playing video

---
 xbmc/Application.cpp | 23 ++++++++++++++++-------
 xbmc/Application.h   |  1 +
 2 files changed, 17 insertions(+), 7 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index e792b72..2204f35 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -437,6 +437,7 @@ CApplication::CApplication(void)
   m_currentStackPosition = 0;
   m_lastFrameTime = 0;
   m_lastRenderTime = 0;
+  m_skipGuiRender = false;
   m_bTestMode = false;
 
   m_muted = false;
@@ -2282,12 +2283,7 @@ void CApplication::Render()
   CDirtyRegionList dirtyRegions;
 
   // render gui layer
-  int fps = 0;
-  if (g_graphicsContext.IsFullScreenVideo() && !m_pPlayer->IsPausedPlayback())
-    fps = CSettings::Get().GetInt("videoplayer.limitguiupdate");
-  unsigned int now = XbmcThreads::SystemClockMillis();
-  unsigned int frameTime = now - m_lastRenderTime;
-  if (fps <= 0 || frameTime * fps >= 1000)
+  if (!m_skipGuiRender)
   {
     dirtyRegions = g_windowManager.GetDirty();
     if (g_graphicsContext.GetStereoMode())
@@ -2325,6 +2321,7 @@ void CApplication::Render()
   g_infoManager.ResetCache();
   lock.Leave();
 
+  unsigned int now = XbmcThreads::SystemClockMillis();
   if (hasRendered)
     m_lastRenderTime = now;
 
@@ -2965,8 +2962,20 @@ void CApplication::FrameMove(bool processEvents, bool processGUI)
   }
   if (processGUI && m_renderGUI)
   {
+    m_skipGuiRender = false;
+    int fps = 0;
+    if (g_graphicsContext.IsFullScreenVideo() && !m_pPlayer->IsPausedPlayback())
+      fps = CSettings::Get().GetInt("videoplayer.limitguiupdate");
+    unsigned int now = XbmcThreads::SystemClockMillis();
+    unsigned int frameTime = now - m_lastRenderTime;
+    if (fps > 0 && frameTime * fps < 1000)
+      m_skipGuiRender = true;
+
     if (!m_bStop)
-      g_windowManager.Process(CTimeUtils::GetFrameTime());
+    {
+      if (!m_skipGuiRender)
+        g_windowManager.Process(CTimeUtils::GetFrameTime());
+    }
     g_windowManager.FrameMove();
   }
 }
diff --git a/xbmc/Application.h b/xbmc/Application.h
index 0a332ff..c9cfc92 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -447,6 +447,7 @@ class CApplication : public CXBApplicationEx, public IPlayerCallback, public IMs
   bool m_bPresentFrame;
   unsigned int m_lastFrameTime;
   unsigned int m_lastRenderTime;
+  bool m_skipGuiRender;
 
   bool m_bStandalone;
   bool m_bEnableLegacyRes;
